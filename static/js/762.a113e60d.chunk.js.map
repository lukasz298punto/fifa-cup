{"version":3,"file":"static/js/762.a113e60d.chunk.js","mappings":"mSAaA,MANA,WACI,IAAMA,GAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,eAGlC,OAFcC,EAAAA,EAAAA,IAAkB,CAJF,WAIwBH,EAGzD,E,0DC6ED,MAnEA,WACI,MAA4BI,IAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACNC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACC,EAAA,EAAD,CAASC,QAASN,EAAlB,UACI,SAACO,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAAC,IAAD,UAAYT,EAAE,YACd,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,kBAEP,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,4BAEP,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,aAEP,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,iBAIf,SAACY,EAAA,EAAD,WACKC,EAAAA,EAAAA,KAAG,OAACf,QAAD,IAACA,OAAD,EAACA,EAAMgB,MAAM,SAACC,GACd,MAA6CA,EAAYjB,OAAjDkB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,OAIlC,OAFAC,QAAQC,IAAIL,EAAS,YAGjB,UAACP,EAAA,EAAD,CAAUa,OAAK,EAAf,WACI,SAAC,IAAD,CAAWX,MAAM,OAAjB,SAAyBM,KACzB,SAAC,IAAD,CAAWN,MAAM,SAAjB,SACKO,IAAaK,EAAAA,EAAAA,GAAO,IAAIC,KAAKN,GAAYO,EAAAA,OAE9C,SAAC,IAAD,CAAWd,MAAM,SAAjB,SACKK,IAAWO,EAAAA,EAAAA,GAAO,IAAIC,KAAKR,GAAUS,EAAAA,OAE1C,SAAC,IAAD,CAAWd,MAAM,SAAjB,SACcX,EAATmB,EAAW,kBAAkB,WAElC,SAAC,IAAD,CAAWR,MAAM,SAAjB,UACI,SAACe,EAAA,EAAD,CACIC,KAAK,QACLC,QAAS,WACL1B,GACI2B,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,kBAAAA,KAA+B,CACxCC,GAAIhB,EAAYgB,KAG3B,EARL,UAUI,SAACC,EAAA,EAAD,UAtBSjB,EAAYgB,GA2BxC,YAMxB,C","sources":["hooks/useTournamentListQuery.tsx","pages/TournamentList.tsx"],"sourcesContent":["import { useFirestoreQuery } from '@react-query-firebase/firestore';\r\nimport { firestore } from 'config/firebase';\r\nimport { collection, CollectionReference } from 'firebase/firestore';\r\nimport { Schema, Tournament } from 'types/global';\r\n\r\nexport const schemaListQueryKey = 'schemas';\r\n\r\nfunction useTournamentListQuery() {\r\n    const ref = collection(firestore, 'tournaments') as CollectionReference<Tournament>;\r\n    const query = useFirestoreQuery([schemaListQueryKey], ref);\r\n\r\n    return query;\r\n}\r\nexport default useTournamentListQuery;\r\n","import VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { IconButton } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport { TableCell } from 'style/components';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Loading } from 'components/Loading';\r\nimport { TableContainer } from 'components/TableContainer';\r\nimport { dateTimeFormat } from 'constants/global';\r\nimport { format } from 'date-fns';\r\nimport useTournamentListQuery from 'hooks/useTournamentListQuery';\r\nimport { map } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { generatePath, useNavigate } from 'react-router-dom';\r\nimport { routes } from 'routing/routes';\r\nimport { Player } from 'types/global';\r\n\r\nexport type Players = {\r\n    players: Player[];\r\n};\r\n\r\nfunction TournamentList() {\r\n    const { data, isLoading } = useTournamentListQuery();\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Loading loading={isLoading}>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{t('Nazwa')}</TableCell>\r\n                            <TableCell width={200} align=\"center\">\r\n                                {t('Data startu')}\r\n                            </TableCell>\r\n                            <TableCell width={200} align=\"center\">\r\n                                {t('Data zakończenia')}\r\n                            </TableCell>\r\n                            <TableCell width={100} align=\"center\">\r\n                                {t('Status')}\r\n                            </TableCell>\r\n                            <TableCell width={100} align=\"center\">\r\n                                {t('Akcje')}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {map(data?.docs, (docSnapshot) => {\r\n                            const { endDate, name, startDate, status } = docSnapshot.data();\r\n\r\n                            console.log(endDate, 'endDate');\r\n\r\n                            return (\r\n                                <TableRow hover key={docSnapshot.id}>\r\n                                    <TableCell align=\"left\">{name}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {startDate && format(new Date(startDate), dateTimeFormat)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {endDate && format(new Date(endDate), dateTimeFormat)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {status ? t('Zakończony') : t('Trwa')}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                navigate(\r\n                                                    generatePath(routes.TOURNAMENT_DETAIL.path, {\r\n                                                        id: docSnapshot.id,\r\n                                                    })\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            <VisibilityIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Loading>\r\n    );\r\n}\r\nexport default TournamentList;\r\n"],"names":["ref","collection","firestore","useFirestoreQuery","useTournamentListQuery","data","isLoading","t","useTranslation","navigate","useNavigate","Loading","loading","TableContainer","Table","TableHead","TableRow","width","align","TableBody","map","docs","docSnapshot","endDate","name","startDate","status","console","log","hover","format","Date","dateTimeFormat","IconButton","size","onClick","generatePath","routes","id","Visibility"],"sourceRoot":""}