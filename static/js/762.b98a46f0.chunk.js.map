{"version":3,"file":"static/js/762.b98a46f0.chunk.js","mappings":"mSAaA,MANA,WACI,IAAMA,GAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,eAGlC,OAFcC,EAAAA,EAAAA,IAAkB,CAJF,eAIwBH,EAAK,CAAEI,WAAW,GAG3E,E,wFCqFD,MAvEA,WACI,MAA4BC,IAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACNC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACC,EAAA,EAAD,CAASC,QAASN,EAAlB,UACI,SAACO,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAAC,IAAD,UAAYT,EAAE,YACd,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,kBAEP,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,4BAEP,SAAC,IAAD,CAAWU,MAAO,GAAIC,MAAM,SAA5B,SACKX,EAAE,aAEP,SAAC,IAAD,CAAWU,MAAO,IAAKC,MAAM,SAA7B,SACKX,EAAE,iBAIf,SAACY,EAAA,EAAD,WACKC,EAAAA,EAAAA,KAAG,OAACf,QAAD,IAACA,OAAD,EAACA,EAAMgB,MAAM,SAACC,GACd,MAAqCA,EAAYjB,OAAzCkB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAEvB,OACI,UAACT,EAAA,EAAD,CAAUU,OAAK,EAAf,WACI,SAAC,IAAD,CAAWR,MAAM,OAAjB,SAAyBM,KACzB,SAAC,IAAD,CAAWN,MAAM,SAAjB,SACKO,IAAaE,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,GAAYI,EAAAA,OAE9C,SAAC,IAAD,CAAWX,MAAM,SAAjB,SACKK,IAAWI,EAAAA,EAAAA,GAAO,IAAIC,KAAKL,GAAUM,EAAAA,OAE1C,SAAC,IAAD,CAAWX,MAAM,SAAjB,SACKK,GACG,SAACO,EAAA,EAAD,CAAUC,MAAM,YAChBN,GACA,SAACO,EAAA,EAAD,CAAUD,MAAM,aAEhB,SAACE,EAAA,EAAD,CAAoBF,MAAM,eAGlC,SAAC,IAAD,CAAWb,MAAM,SAAjB,UACI,SAACgB,EAAA,EAAD,CACIC,KAAK,QACLC,QAAS,WACL3B,GACI4B,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,kBAAAA,KAA+B,CACxCC,GAAIjB,EAAYiB,KAG3B,EARL,UAUI,SAACC,EAAA,EAAD,UA5BSlB,EAAYiB,GAiCxC,YAMxB,C,2BC9FGE,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,uDACD,QAEJN,EAAQ,EAAUG,C,2BCfdL,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+IACD,kBAEJN,EAAQ,EAAUG,C,2BCfdL,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,oOACD,QAEJN,EAAQ,EAAUG,C","sources":["hooks/useTournamentListQuery.tsx","pages/TournamentList.tsx","../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/HourglassEmpty.js","../node_modules/@mui/icons-material/Loop.js"],"sourcesContent":["import { useFirestoreQuery } from '@react-query-firebase/firestore';\r\nimport { firestore } from 'config/firebase';\r\nimport { collection, CollectionReference } from 'firebase/firestore';\r\nimport { Schema, Tournament } from 'types/global';\r\n\r\nexport const schemaListQueryKey = 'tournaments';\r\n\r\nfunction useTournamentListQuery() {\r\n    const ref = collection(firestore, 'tournaments') as CollectionReference<Tournament>;\r\n    const query = useFirestoreQuery([schemaListQueryKey], ref, { subscribe: true });\r\n\r\n    return query;\r\n}\r\nexport default useTournamentListQuery;\r\n","import VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { IconButton } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport { TableCell } from 'style/components';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Loading } from 'components/Loading';\r\nimport { TableContainer } from 'components/TableContainer';\r\nimport { dateTimeFormat } from 'constants/global';\r\nimport { format } from 'date-fns';\r\nimport useTournamentListQuery from 'hooks/useTournamentListQuery';\r\nimport { map } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { generatePath, useNavigate } from 'react-router-dom';\r\nimport { routes } from 'routing/routes';\r\nimport { Player } from 'types/global';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport type Players = {\r\n    players: Player[];\r\n};\r\n\r\nfunction TournamentList() {\r\n    const { data, isLoading } = useTournamentListQuery();\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Loading loading={isLoading}>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{t('Nazwa')}</TableCell>\r\n                            <TableCell width={200} align=\"center\">\r\n                                {t('Data startu')}\r\n                            </TableCell>\r\n                            <TableCell width={200} align=\"center\">\r\n                                {t('Data zako≈Ñczenia')}\r\n                            </TableCell>\r\n                            <TableCell width={50} align=\"center\">\r\n                                {t('Status')}\r\n                            </TableCell>\r\n                            <TableCell width={100} align=\"center\">\r\n                                {t('Akcje')}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {map(data?.docs, (docSnapshot) => {\r\n                            const { endDate, name, startDate } = docSnapshot.data();\r\n\r\n                            return (\r\n                                <TableRow hover key={docSnapshot.id}>\r\n                                    <TableCell align=\"left\">{name}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {startDate && format(new Date(startDate), dateTimeFormat)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {endDate && format(new Date(endDate), dateTimeFormat)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {endDate ? (\r\n                                            <DoneIcon color=\"primary\" />\r\n                                        ) : startDate ? (\r\n                                            <LoopIcon color=\"primary\" />\r\n                                        ) : (\r\n                                            <HourglassEmptyIcon color=\"primary\" />\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                navigate(\r\n                                                    generatePath(routes.TOURNAMENT_DETAIL.path, {\r\n                                                        id: docSnapshot.id,\r\n                                                    })\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            <VisibilityIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Loading>\r\n    );\r\n}\r\nexport default TournamentList;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Loop');\n\nexports.default = _default;"],"names":["ref","collection","firestore","useFirestoreQuery","subscribe","useTournamentListQuery","data","isLoading","t","useTranslation","navigate","useNavigate","Loading","loading","TableContainer","Table","TableHead","TableRow","width","align","TableBody","map","docs","docSnapshot","endDate","name","startDate","hover","format","Date","dateTimeFormat","Done","color","Loop","HourglassEmpty","IconButton","size","onClick","generatePath","routes","id","Visibility","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}