{"version":3,"file":"static/js/458.bdf33086.chunk.js","mappings":"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","sources":["pages/CupCreator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {\r\n    Avatar,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemText,\r\n    MenuItem,\r\n    Paper,\r\n    Radio,\r\n    RadioGroup,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    useMediaQuery,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { concat, filter, get, map, range, size } from 'lodash';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { useTheme } from '@emotion/react';\r\nimport { Title } from 'components/Title';\r\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\r\nimport { Controller, SubmitHandler, useForm, useWatch } from 'react-hook-form';\r\n\r\nfunction FormButton({\r\n    mobileIcon: MobileIcon,\r\n    isMobile,\r\n    ...props\r\n}: ButtonProps & { isMobile: boolean; mobileIcon: OverridableComponent<any> }) {\r\n    if (isMobile) {\r\n        return (\r\n            <IconButton onClick={props.onClick} disabled={props.disabled} color={props.color}>\r\n                <MobileIcon />\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    return <Button {...props} />;\r\n}\r\n\r\ntype FormInput = {\r\n    isGroupStage: '0' | '1';\r\n    groupCount: number;\r\n    ex: any;\r\n};\r\n\r\nconst groupSymbol = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\r\n\r\nfunction CupCreator() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [steps, setSteps] = useState([{ id: 0, label: 'Faza grupowa' }]);\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(get(theme, 'breakpoints').down('sm'));\r\n    const { t } = useTranslation();\r\n    const { control, handleSubmit } = useForm<FormInput>({\r\n        defaultValues: { isGroupStage: '1', groupCount: 1 },\r\n    });\r\n\r\n    const groupCount = useWatch({ control, name: 'groupCount' });\r\n    const isGroupStage = !!Number(useWatch({ control, name: 'isGroupStage' }));\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleAddNewStep = () => {\r\n        setSteps((prev) => concat(prev, { id: Date.now(), label: `Etap ${size(prev) + 1}` }));\r\n    };\r\n\r\n    const handleRemoveStep = (stepId: number) => () => {\r\n        setSteps((prev) => filter(prev, ({ id }) => id !== stepId));\r\n    };\r\n\r\n    const onSubmit: SubmitHandler<FormInput> = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n        handleSubmit(onSubmit)();\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n            }}\r\n        >\r\n            <Title className=\"mb-2\">{t('Tworzenie nowego schematu dla Turnieju')}</Title>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Stepper\r\n                    nonLinear\r\n                    activeStep={activeStep}\r\n                    orientation={matches ? 'vertical' : 'horizontal'}\r\n                >\r\n                    {map(steps, ({ label, id }, index) => {\r\n                        return (\r\n                            <Step key={id}>\r\n                                <StepLabel>\r\n                                    <Box className=\"flex items-center\">\r\n                                        <TextField\r\n                                            className=\"max-w-[9rem]\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            defaultValue={label}\r\n                                        />\r\n                                        {size(steps) > 1 && (\r\n                                            <DeleteOutlineIcon\r\n                                                onClick={handleRemoveStep(id)}\r\n                                                fontSize=\"small\"\r\n                                                color=\"error\"\r\n                                                className=\"cursor-pointer\"\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                </StepLabel>\r\n                            </Step>\r\n                        );\r\n                    })}\r\n                </Stepper>\r\n                <Grid container spacing={2} className=\"mt-4\">\r\n                    <Grid item xs={12}>\r\n                        <FormControl>\r\n                            <FormLabel>{t('Typ fazy')}</FormLabel>\r\n                            <Controller\r\n                                name=\"isGroupStage\"\r\n                                control={control}\r\n                                render={({ field }) => (\r\n                                    <RadioGroup row {...field}>\r\n                                        <FormControlLabel\r\n                                            value={'0'}\r\n                                            control={<Radio />}\r\n                                            label=\"Faza pucharowa\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={'1'}\r\n                                            control={<Radio />}\r\n                                            label=\"Faza grupowa\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={2}>\r\n                        <FormControl className=\"w-full\">\r\n                            <FormLabel>{t('Rodzaj wygranej')}</FormLabel>\r\n                            <Controller\r\n                                defaultValue={1}\r\n                                name=\"ex\"\r\n                                control={control}\r\n                                render={({ field }) => (\r\n                                    <Select {...field} size=\"small\">\r\n                                        <MenuItem value={1}>{t('Jeden mecz')}</MenuItem>\r\n                                        <MenuItem value={2}>{t('Dwumecz')}</MenuItem>\r\n                                        {!isGroupStage && (\r\n                                            <MenuItem value={3}>{t('Best 3')}</MenuItem>\r\n                                        )}\r\n                                        {!isGroupStage && (\r\n                                            <MenuItem value={4}>{t('Best 5')}</MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    {!isGroupStage && (\r\n                        <Grid item xs={6} md={1}>\r\n                            <FormControl className=\"w-full\">\r\n                                <FormLabel>{t('Ilość par')}</FormLabel>\r\n                                <Controller\r\n                                    defaultValue={1}\r\n                                    name=\"ex\"\r\n                                    control={control}\r\n                                    render={({ field }) => (\r\n                                        <TextField {...field} size=\"small\" type=\"number\" />\r\n                                    )}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    )}\r\n                    {isGroupStage && (\r\n                        <>\r\n                            <Grid item xs={6} md={1}>\r\n                                <FormControl className=\"w-full\">\r\n                                    <FormLabel>{t('Ilość grup')}</FormLabel>\r\n                                    <Controller\r\n                                        defaultValue={1}\r\n                                        name=\"groupCount\"\r\n                                        control={control}\r\n                                        render={({ field }) => (\r\n                                            <Select {...field} size=\"small\" className=\"w-full\">\r\n                                                {map(range(1, size(groupSymbol) + 1), (val) => (\r\n                                                    <MenuItem value={val}>{val}</MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item container>\r\n                                <Grid item xs={12} sm={8} md={4} lg={3}>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table size=\"small\" className=\"w-full\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {t('Nazwa grupy')}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" width={110}>\r\n                                                        {t('Ilość drużyn')}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" width={100}>\r\n                                                        {t('Awans')}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {map(range(0, groupCount), (val) => (\r\n                                                    <TableRow key={val}>\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {t('Grupa')} {groupSymbol[val]}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <Controller\r\n                                                                defaultValue={5}\r\n                                                                name=\"ex\"\r\n                                                                control={control}\r\n                                                                render={({ field }) => (\r\n                                                                    <Select\r\n                                                                        {...field}\r\n                                                                        size=\"small\"\r\n                                                                        className=\"w-full\"\r\n                                                                    >\r\n                                                                        {map(\r\n                                                                            range(3, 16),\r\n                                                                            (val) => (\r\n                                                                                <MenuItem\r\n                                                                                    value={val}\r\n                                                                                >\r\n                                                                                    {val}\r\n                                                                                </MenuItem>\r\n                                                                            )\r\n                                                                        )}\r\n                                                                    </Select>\r\n                                                                )}\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <Controller\r\n                                                                defaultValue={3}\r\n                                                                name=\"ex\"\r\n                                                                control={control}\r\n                                                                render={({ field }) => (\r\n                                                                    <Select\r\n                                                                        {...field}\r\n                                                                        size=\"small\"\r\n                                                                        className=\"w-full\"\r\n                                                                    >\r\n                                                                        {map(\r\n                                                                            range(3, 16),\r\n                                                                            (val) => (\r\n                                                                                <MenuItem\r\n                                                                                    value={val}\r\n                                                                                >\r\n                                                                                    {val}\r\n                                                                                </MenuItem>\r\n                                                                            )\r\n                                                                        )}\r\n                                                                    </Select>\r\n                                                                )}\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n                <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                    <FormButton\r\n                        mobileIcon={ArrowBackIcon}\r\n                        isMobile={matches}\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        sx={{ mr: 1 }}\r\n                        startIcon={<ArrowBackIcon />}\r\n                        children={t('Poprzedni')}\r\n                        color=\"primary\"\r\n                    />\r\n                    <FormButton\r\n                        mobileIcon={ArrowForwardIcon}\r\n                        isMobile={matches}\r\n                        disabled={activeStep === size(steps) - 1}\r\n                        onClick={handleNext}\r\n                        endIcon={<ArrowForwardIcon />}\r\n                        children={t('Następny')}\r\n                        color=\"primary\"\r\n                    />\r\n                    <Box sx={{ flex: '1 1 auto' }} />\r\n\r\n                    <FormButton\r\n                        mobileIcon={AddIcon}\r\n                        isMobile={matches}\r\n                        startIcon={<AddIcon />}\r\n                        onClick={handleAddNewStep}\r\n                        children={t('Dodaj faze')}\r\n                        color=\"primary\"\r\n                    />\r\n                    <FormButton\r\n                        onClick={handleOnSubmit}\r\n                        mobileIcon={SaveIcon}\r\n                        isMobile={matches}\r\n                        startIcon={<SaveIcon />}\r\n                        color=\"primary\"\r\n                        children={t('Zapisz')}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\nexport default CupCreator;\r\n"],"names":["FormButton","MobileIcon","mobileIcon","isMobile","props","onClick","disabled","color","groupSymbol","useState","activeStep","setActiveStep","id","label","steps","setSteps","theme","useTheme","matches","useMediaQuery","get","down","t","useTranslation","useForm","defaultValues","isGroupStage","groupCount","control","handleSubmit","useWatch","name","Number","onSubmit","data","console","log","sx","p","className","width","nonLinear","orientation","map","index","stepId","variant","size","defaultValue","prev","filter","fontSize","container","spacing","item","xs","render","field","row","value","md","type","range","val","sm","lg","component","Paper","align","scope","display","flexDirection","pt","ArrowBackIcon","prevActiveStep","mr","startIcon","children","ArrowForwardIcon","endIcon","flex","AddIcon","concat","Date","now","SaveIcon"],"sourceRoot":""}